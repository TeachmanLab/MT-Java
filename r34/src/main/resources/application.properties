server.url=http://ec2-54-208-207-125.compute-1.amazonaws.com:8080
server.port=9090
management.port=9001
logging.file=target/log.out

logging.level.org.springframework=FATAL
logging.level.edu.virginia=DEBUG

# This configures where the view logic will be, in this case it is in /templates
# in the resources directory.
spring.view.prefix=/
# spring.view.suffix=html
spring.view.mode=html5
# reload pages.
spring.thymeleaf.cache=false

study.maxParticipants=300

# Database Configuration
# ========================
spring.datasource.url=jdbc:mysql://localhost/pi
spring.datasource.username=pi_user
spring.datasource.password=pi_password
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:h2:mem:test;MODE=PostgreSQL
# spring.datasource.driverClassName: org.h2.Driver
# spring.datasource.schema= classpath:db/schema.sql

# Email Configuration
# ========================
# For development, please use FakeSMTP.  It is a free Fake SMTP Server with GUI, written in Java,
# for testing emails in applications. We will use it to verify if the submission works. Please
# download the application and simply run it by invoking: java -jar fakeSMTP-<version>.jar.
# After launching Fake SMTP Server, start this server, and you can read the emails generated there.
email.host=localhost
email.port=2525
email.protocol=smtp
email.auth=false
email.username=na
email.password=na

# Email Addresses
# ========================
# respondTo is the 'from' address for email (if the smtp server respects the setting)
# alertsTo is where any alerts pertaining to the status of a participant will be sent.
# admin will recieve alerts about system failures and export warnings.
email.respondTo=projectimplicitmentalhealth1@gmail.com
email.alertsTo=projectimplicitmentalhealth1@gmail.com
email.admin=projectimplicitmentalhealth1@gmail.com

# Tango (Gift Card) Configuration
# =============================
tango.id=SartographyTest
tango.key=eTtWYeoVSzZI8Iia02LZj3yw39tX7TpDDjijZkdipGJNU0E7T1j20Y6BY
tango.url=https://sandbox.tangocard.com/raas/v1
tango.accountId=PIMH-CBM
tango.customer=SartographyTest
tango.accountEmail=projectimplicitmentalhealth1@gmail.com
tango.tangoCardSku=TNGO-E-V-STD
tango.maxParticipants=3

# Asymmetrical Encryption of ID
# ===================================
# If you enable encryption here, then the system will use the public_key.der
# file to encypt the participant id.  You will need access to the companion
# private key to unencrypt the value.
encryption.enabled=true

# Data Export Requirements
# ======================================
# This allows you to set a maximum number of questionnaire records that
# can be stored in the system.  If this amount is exceeded, then the site
# cause the server to email administrators if the export routine has not
# run for certain number of minutes.
export.maxRecords=900000
export.maxMinutes=30000
# You can prevent administrative users from downloading data directly from the
# server using this setting.  This should be set to true if you are depending
# on exports which will safely remove data from the system.
export.disableDownloads=true

# Recaptcha
# NOTE:  These settings are specific to our test server ec2-54-208-207-125.compute-1.amazonaws.com
# Though they will also work on localhost when developing.
recaptcha.url=https://www.google.com/recaptcha/api/siteverify
recaptcha.site-key=6Lfl7iETAAAAAGegsAEBE5A0DXguBRZjp3EbCz4r
recaptcha.secret-key=6Lfl7iETAAAAAGsgvgCJfYc0-iJM3XyFouKi6zww

