server.url=http://localhost
server.port=9000
management.port=9001
logging.file=logs/log.txt
landing_page.url=https://mindtrails.virginia.edu

logging.level.org.springframework=FATAL
logging.level.edu.virginia=DEBUG

# This configures where the view logic will be, in this case it is in /templates
# in the resources directory.
spring.mvc.view.prefix=/templates/

# spring.view.suffix=html
spring.view.mode=html5
# reload pages.
spring.thymeleaf.cache=false
spring.thymeleaf.prefix: classpath:/templates/

# Prevent errors getting thrown when we display the error page.
security.filter-dispatcher-types: ASYNC, FORWARD, INCLUDE, REQUEST, ERROR

# Data Export Requirements
# ======================================
# This allows you to set a maximum number of questionnaire records that
# can be stored in the system.  If this amount is exceeded, then the site
# will not allow new users to log in and add additional data. It will also
# cause the server to email administrators if the export routine has not
# run for certain number of minutes.
export.maxRecords=900000
export.maxMinutes=30000
# You can prevent administrative users from downloading data directly from the
# server using this setting.  This should be set to true if you are depending
# on exports which will safely remove data from the system.
export.disableDownloads=true

# Database Configuration
# ========================
spring.datasource.url=jdbc:mysql://localhost/base
spring.datasource.username=pi_user
spring.datasource.password=pi_password
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1

# Email Addresses
# ========================
# respondTo is the 'from' address for email (if the smtp server respects the setting)
# alertsTo is where any alerts pertaining to the status of a participant will be sent.
# admin will recieve alerts about system failures and export warnings.
email.respondTo=test@test.com
email.alertsTo=test@test.com
email.admin=test@test.com


# Tango (Gift Card) Configuration
tango.enabled=true
tango.id=uvaonlinestudysandboxV2
tango.key=Oy?JG@BUmflGSFIAAFLYuDPJZvBxPivHSRBE$CwnzGK
tango.url=https://sandbox.tangocard.com/raas/v2
tango.accountId=teachmanLab
tango.customerId=teachmanLab
tango.accountEmail=projectimplicitmentalhealth1@gmail.com
tango.utid=U561593
tango.maxParticipants=3



# Email Configuration
# ========================
# For development, please use FakeSMTP.  It is a free Fake SMTP Server with GUI, written in Java,
# for testing emails in applications. We will use it to verify if the submission works. Please
# download the application and simply run it by invoking: java -jar fakeSMTP-<version>.jar.
# After launching Fake SMTP Server, start this server, and you can read the emails generated there.
email.host=localhost
email.port=2525
email.protocol=smtp
email.auth=false
email.username=na
email.password=na

# Recaptcha
# NOTE:  These settings are specific to our test server ec2-54-208-207-125.compute-1.amazonaws.com
# Though they will also work on localhost when developing.
recaptcha.url=https://www.google.com/recaptcha/api/siteverify
recaptcha.site-key=6Lc0I6UhAAAAAHvZe2_KjnRryAjttJtQRS5RDXlp
recaptcha.secret-key=6Lc0I6UhAAAAAFU5SKorCEP94WwQluj9SCO9St6-

# Twilio Text Messages
twilio.account_sid=XXX
twilio.auth_token=YYY
twilio.phone_number=540-555-5555
twilio.notify_hour=17
twilio.notify_minute=0

#Import account
import.username=dhf8r@virginia.edu
import.password=somepass
import.url=http://localhost:8080/corezzzz
import.path=/tmp
import.delete=false
import.mode=export
import.rate.in.milliseconds=15000
